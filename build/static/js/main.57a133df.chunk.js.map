{"version":3,"sources":["axios.js","components/Row.js","requests.js","components/Banner.js","components/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchURL","isLargeRow","useState","movies","setMovies","trailerURL","setTrailerURL","useEffect","a","get","request","data","results","fetchData","className","style","paddingLeft","map","movie","onClick","movieTrailer","name","id","tmdbID","then","url","console","log","catch","err","handleClick","src","poster_path","backdrop_path","alt","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchSFMovies","fetchAnimations","Banner","setMovie","Math","floor","random","length","str","n","backgrounSize","backgroundImage","backgroundPosition","original_name","overview","substr","size","paddingRight","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","cursor","marginRight","marginLeft","App","position","top","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.57a133df.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\",\n});\n\nexport default instance;","import React, { useEffect, useState } from 'react'\nimport axios from '../axios';\nimport \"./Row.css\";\nimport Youtube from \"react-youtube\";\nimport movieTrailer from \"movie-trailer\"\n\nconst baseURL = \"http://image.tmdb.org/t/p/original\";\n\nconst Row = ({ title, fetchURL, isLargeRow}) => {\n    const [movies, setMovies] = useState([]);\n    const [trailerURL, setTrailerURL] = useState(\"\");\n\n    useEffect(() => {\n        async function fetchData() {\n            const request = await axios.get(fetchURL);\n            setMovies(request.data.results);\n            return request;\n        }\n        fetchData();\n    },\n    [fetchURL],\n    );\n\n    const handleClick = (movie) => {\n        if (trailerURL){\n            setTrailerURL(\"\");\n        }\n        else{\n            movieTrailer(`${movie?.name || \"\"}`, {id: true, tmdbID: movie.id}).then(url => {\n                console.log(url);\n                setTrailerURL(url);\n            }).catch((err) => console.log(err));\n        }\n    }\n\n    const opts = {\n        height: \"390\",\n        width: \"100%\",\n        playerVars: {\n            autoplay:1\n        },\n    };\n\n    return (\n        <div className=\"row\">\n            <h3 style={{paddingLeft: \"20px\"}}>{title}</h3>\n            <div className=\"row_posters\">\n                {movies.map(movie => (\n                    <img \n                        key={movie.id} \n                        onClick={() => handleClick(movie)} \n                        className={`row_poster ${isLargeRow && \"row_posterLarge\"}`} \n                        src={`${baseURL}${isLargeRow?movie.poster_path:movie.backdrop_path}`} \n                        alt={movie.name}/>\n                ))}\n            </div>\n            {trailerURL && <Youtube videoId={trailerURL} opts={opts}/>}\n        </div>\n    )\n}\n\nexport default Row\n","const API_KEY = \"28c24e82512e3447c4bf50ff07d079ac\";\n\nconst requests = {\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&lanuage=en-US`,\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&lanuage=en-US`,\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n    fetchSFMovies: `/discover/movie?api_key=${API_KEY}&with_genres=878`,\n    fetchAnimations: `/discover/movie?api_key=${API_KEY}&with_genres=16`,\n}\n\nexport default requests;","import React, {useState, useEffect} from 'react'\nimport axios from '../axios';\nimport requests from '../requests';\nimport \"./Banner.css\"\nimport { MdPlayArrow, MdInfoOutline } from 'react-icons/md';\n\nconst baseURL = \"http://image.tmdb.org/t/p/original\";\n\nconst Banner = () => {\n    const [movie, setMovie] = useState([]);\n\n    useEffect(() => {\n        async function fetchData() {\n            const request = await axios.get(requests.fetchNetflixOriginals);\n            setMovie(request.data.results[Math.floor(Math.random()*request.data.results.length)]);\n            return request;\n        }\n        fetchData();\n    },\n    []\n    );\n\n    function truncate(str, n){\n        return str?.length > n ? str.substr(0,n-1) + \"...\" : str;\n    }\n\n    const style = {\n        backgrounSize: \"cover\",\n        backgroundImage: `url(\"${baseURL}${movie?.backdrop_path}\")`,\n        backgroundPosition: \"center center\"\n    };\n\n    return (\n        <header className=\"banner\" style={style}>\n            <div className=\"banner_content\"> \n                <h1 className=\"banner_title\">\n                    {movie?.title || movie?.name || movie?.original_name}\n                </h1>\n                <div className=\"banner_description\">\n                    {truncate(movie?.overview,150)}\n                </div>\n                <div className=\"banner_buttons\">\n                    <button className=\"banner_button button_play\">\n                        <MdPlayArrow size={26}/>\n                        <div style={{paddingRight: \"0.2rem\", paddingLeft: \"0.4rem\"}}>Play</div>\n                    </button>\n                    <button className=\"banner_button button_more\">\n                        <MdInfoOutline size={24}/>\n                        <div style={{paddingRight: \"0.2rem\", paddingLeft: \"0.4rem\"}}>More Info</div>\n                    </button>\n                </div>\n                \n            </div>\n            <div className=\"banner_fadeBottom\"></div>\n        </header>\n    )\n}\n\nexport default Banner\n","import React, { useEffect, useState }from 'react'\nimport \"./Nav.css\"\nimport { MdArrowDropDown, MdNotifications, MdSearch } from \"react-icons/md\"\n\nconst Nav = () => {\n    const [show, handleShow] = useState(false);\n\n    useEffect(() => {\n        window.addEventListener(\"scroll\", () => {\n            if (window.scrollY > 80){\n                handleShow(true);\n            }\n            else{\n                handleShow(false);\n            }\n        });\n        return () => {\n            window.removeEventListener(\"scroll\");\n        }\n    }, [])\n\n    return (\n        <header className={`nav ${show && \"nav_black\"}`}>\n            <div className=\"nav_menus_left\">\n                <img\n                    className=\"nav_logo\" \n                    src=\"https://about.netflix.com/images/logo.png\" \n                    alt=\"Netflix Logo\"\n                />\n                <h5 className=\"nav_menu home\">Home</h5>\n                <h5 className=\"nav_menu\">TV Shows</h5>\n                <h5 className=\"nav_menu\">Movies</h5>\n                <h5 className=\"nav_menu\">New {\"&\"} Popular</h5>\n                <h5 className=\"nav_menu\">My List</h5>\n            </div>\n            <div className=\"nav_menus_right\">\n                <MdSearch size={24} style={{cursor: \"pointer\"}}/>\n                <h5 className=\"nav_menu\" style={{marginRight: \"10px\", marginLeft: \"10px\"}}>KIDS</h5>\n                <MdNotifications size={30} style={{cursor: \"pointer\"}}/>\n                <img\n                    className=\"nav_avatar\" \n                    src=\"https://i.pinimg.com/originals/b6/77/cd/b677cd1cde292f261166533d6fe75872.png\" \n                    alt=\"Netflix Default Avatar\"\n                />\n                <MdArrowDropDown size={24} style={{cursor: \"pointer\"}}/>\n            </div>\n        </header>\n    )\n}\n\nexport default Nav\n","import React from 'react';\nimport './App.css';\nimport Row from './components/Row';\nimport requests from './requests';\nimport Banner from \"./components/Banner\"\nimport Nav from './components/Nav';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n        <Nav/>\n        {/* <div style={{position: \"absolute\"}}> */}\n        <Banner/>\n        <div style={{position: \"relative\", top:\"-5rem\"}}>\n            <Row title=\"Trending Now\" fetchURL={requests.fetchTrending} isLargeRow={false}/>\n            <Row title=\"Top Rated\" fetchURL={requests.fetchTopRated} isLargeRow={false}/>\n            <Row title=\"Only on Netflix\" fetchURL={requests.fetchNetflixOriginals} isLargeRow={true}/>\n            <Row title=\"Action Movies\" fetchURL={requests.fetchActionMovies} isLargeRow={false}/>\n            <Row title=\"Comedies\" fetchURL={requests.fetchComedyMovies} isLargeRow={false}/>\n            <Row title=\"Romantic Movies\" fetchURL={requests.fetchRomanceMovies} isLargeRow={false}/>\n            <Row title=\"Horror Movies\" fetchURL={requests.fetchHorrorMovies} isLargeRow={false}/>\n            <Row title=\"Sci-Fi Movies\" fetchURL={requests.fetchSFMovies} isLargeRow={false}/>\n            <Row title=\"Animations\" fetchURL={requests.fetchAnimations} isLargeRow={false}/>\n        </div>\n        {/* </div> */}\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}